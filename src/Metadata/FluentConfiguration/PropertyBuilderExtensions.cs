using Kros.KORM.Properties;
using System;

namespace Kros.KORM.Metadata
{
    /// <summary>
    /// Extensions for <see cref="IPropertyBuilder{TEntity}"/>
    /// </summary>
    public static class PropertyBuilderExtensions
    {
        private static CurrentTimeValueGenerator _currentTimeValueGenerator = new CurrentTimeValueGenerator();

        /// <summary>
        /// Generates CurrentTime value generator for a given property.
        /// </summary>
        /// <typeparam name="TEntity">Entity type.</typeparam>
        /// <param name="propertyBuilder">Property builder.</param>
        /// <param name="valueGenerated">Indicate when a value for a property will be generated by the database.</param>
        public static IEntityTypePropertyBuilder<TEntity> UseCurrentTimeValueGenerator<TEntity>(
            this IPropertyBuilder<TEntity> propertyBuilder, ValueGenerated valueGenerated) where TEntity : class
        {
            switch (valueGenerated)
            {
                case ValueGenerated.OnInsert:
                    return propertyBuilder.UseValueGeneratorOnInsert(GetInstance());

                case ValueGenerated.OnUpdate:
                    return propertyBuilder.UseValueGeneratorOnUpdate(GetInstance());

                case ValueGenerated.OnInsertOrUpdate:
                    return propertyBuilder.UseValueGeneratorOnInsertOrUpdate(GetInstance());
            }

            throw new NotSupportedException(
                string.Format(Resources.ValueGeneratedNeverNotSupported, nameof(CurrentTimeValueGenerator)));
        }

        private static CurrentTimeValueGenerator GetInstance() => _currentTimeValueGenerator;
    }
}
